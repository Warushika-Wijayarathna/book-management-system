<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/frontend/.env">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/.env" />
              <option name="updatedContent" value="# Firebase Configuration&#10;VITE_FIREBASE_API_KEY=AIzaSyA_DX6klUwoZp6UF4wclU3VPjPQOALJnJg&#10;VITE_FIREBASE_AUTH_DOMAIN=printerest-clone-773aa.firebaseapp.com&#10;VITE_FIREBASE_PROJECT_ID=printerest-clone-773aa&#10;VITE_FIREBASE_STORAGE_BUCKET=printerest-clone-773aa.appspot.com&#10;VITE_FIREBASE_MESSAGING_SENDER_ID=16581331396&#10;VITE_FIREBASE_APP_ID=1:16581331396:web:d44f9b1ecc47caca343c91&#10;VITE_FIREBASE_MEASUREMENT_ID=G-7DYF2BSN3C" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/.env.example">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/.env.example" />
              <option name="updatedContent" value="# Firebase Configuration&#10;VITE_FIREBASE_API_KEY=your_firebase_api_key_here&#10;VITE_FIREBASE_AUTH_DOMAIN=your_firebase_auth_domain_here&#10;VITE_FIREBASE_PROJECT_ID=your_firebase_project_id_here&#10;VITE_FIREBASE_STORAGE_BUCKET=your_firebase_storage_bucket_here&#10;VITE_FIREBASE_MESSAGING_SENDER_ID=your_firebase_messaging_sender_id_here&#10;VITE_FIREBASE_APP_ID=your_firebase_app_id_here&#10;VITE_FIREBASE_MEASUREMENT_ID=your_firebase_measurement_id_here" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/components/auth/SignUpForm.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/components/auth/SignUpForm.tsx" />
              <option name="originalContent" value="import { useState } from &quot;react&quot;;&#10;import { Link } from &quot;react-router&quot;;&#10;import { useNavigate } from &quot;react-router-dom&quot;;&#10;import { EyeCloseIcon, EyeIcon } from &quot;../../icons&quot;;&#10;import Label from &quot;../form/Label&quot;;&#10;import Input from &quot;../form/input/InputField&quot;;&#10;import { signUp } from &quot;../../services/authService&quot;;&#10;&#10;export default function SignUpForm() {&#10;  const [showPassword, setShowPassword] = useState(false);&#10;  const [fname, setFname] = useState(&quot;&quot;);&#10;  const [lname, setLname] = useState(&quot;&quot;);&#10;  const [email, setEmail] = useState(&quot;&quot;);&#10;  const [password, setPassword] = useState(&quot;&quot;);&#10;  const [loading, setLoading] = useState(false);&#10;  const [error, setError] = useState&lt;string | null&gt;(null);&#10;  const [success, setSuccess] = useState&lt;string | null&gt;(null);&#10;  const navigate = useNavigate();&#10;&#10;  const handleSignUp = async (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setError(null);&#10;    setSuccess(null);&#10;    if (!fname || !lname || !email || !password) {&#10;      setError(&quot;All fields are required.&quot;);&#10;      return;&#10;    }&#10;&#10;    if (!email.toLowerCase().endsWith('@bookclub.com')) {&#10;      setError(&quot;unauthorized email.&quot;);&#10;      return;&#10;    }&#10;&#10;    setLoading(true);&#10;    try {&#10;      const name = `${fname} ${lname}`;&#10;      await signUp({ name, email, password });&#10;      setSuccess(&quot;Sign up successful! You can now sign in.&quot;);&#10;      setFname(&quot;&quot;);&#10;      setLname(&quot;&quot;);&#10;      setEmail(&quot;&quot;);&#10;      setPassword(&quot;&quot;);&#10;      setTimeout(() =&gt; navigate(&quot;/signin&quot;), 1000);&#10;    } catch (err: any) {&#10;      setError(err?.response?.data?.message || &quot;Sign up failed.&quot;);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;flex flex-col flex-1 w-full overflow-y-auto lg:w-1/2 no-scrollbar&quot;&gt;&#10;      &lt;div className=&quot;flex flex-col justify-center flex-1 w-full max-w-md mx-auto&quot;&gt;&#10;        &lt;div&gt;&#10;          &lt;div className=&quot;mb-5 sm:mb-8&quot;&gt;&#10;            &lt;h1 className=&quot;mb-2 font-semibold text-gray-800 text-title-sm dark:text-white/90 sm:text-title-md&quot;&gt;&#10;              Sign Up&#10;            &lt;/h1&gt;&#10;            &lt;p className=&quot;text-sm text-gray-500 dark:text-gray-400&quot;&gt;&#10;              Enter your email and password to sign up!&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;          &lt;div&gt;&#10;            &lt;div className=&quot;relative py-3 sm:py-5&quot;&gt;&#10;              &lt;div className=&quot;absolute inset-0 flex items-center&quot;&gt;&#10;                &lt;div className=&quot;w-full border-t border-gray-200 dark:border-gray-800&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;form onSubmit={handleSignUp}&gt;&#10;              &lt;div className=&quot;space-y-5&quot;&gt;&#10;                &lt;div className=&quot;grid grid-cols-1 gap-5 sm:grid-cols-2&quot;&gt;&#10;                  {/* &lt;!-- First Name --&gt; */}&#10;                  &lt;div className=&quot;sm:col-span-1&quot;&gt;&#10;                    &lt;Label&gt;&#10;                      First Name&lt;span className=&quot;text-error-500&quot;&gt;*&lt;/span&gt;&#10;                    &lt;/Label&gt;&#10;                    &lt;Input&#10;                      type=&quot;text&quot;&#10;                      id=&quot;fname&quot;&#10;                      name=&quot;fname&quot;&#10;                      placeholder=&quot;Enter your first name&quot;&#10;                      value={fname}&#10;                      onChange={e =&gt; setFname(e.target.value)}&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                  {/* &lt;!-- Last Name --&gt; */}&#10;                  &lt;div className=&quot;sm:col-span-1&quot;&gt;&#10;                    &lt;Label&gt;&#10;                      Last Name&lt;span className=&quot;text-error-500&quot;&gt;*&lt;/span&gt;&#10;                    &lt;/Label&gt;&#10;                    &lt;Input&#10;                      type=&quot;text&quot;&#10;                      id=&quot;lname&quot;&#10;                      name=&quot;lname&quot;&#10;                      placeholder=&quot;Enter your last name&quot;&#10;                      value={lname}&#10;                      onChange={e =&gt; setLname(e.target.value)}&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                {/* &lt;!-- Email --&gt; */}&#10;                &lt;div&gt;&#10;                  &lt;Label&gt;&#10;                    Email&lt;span className=&quot;text-error-500&quot;&gt;*&lt;/span&gt;&#10;                  &lt;/Label&gt;&#10;                  &lt;Input&#10;                    type=&quot;email&quot;&#10;                    id=&quot;email&quot;&#10;                    name=&quot;email&quot;&#10;                    placeholder=&quot;Enter your email&quot;&#10;                    value={email}&#10;                    onChange={e =&gt; setEmail(e.target.value)}&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;                {/* &lt;!-- Password --&gt; */}&#10;                &lt;div&gt;&#10;                  &lt;Label&gt;&#10;                    Password&lt;span className=&quot;text-error-500&quot;&gt;*&lt;/span&gt;&#10;                  &lt;/Label&gt;&#10;                  &lt;div className=&quot;relative&quot;&gt;&#10;                    &lt;Input&#10;                      placeholder=&quot;Enter your password&quot;&#10;                      type={showPassword ? &quot;text&quot; : &quot;password&quot;}&#10;                      value={password}&#10;                      onChange={e =&gt; setPassword(e.target.value)}&#10;                    /&gt;&#10;                    &lt;span&#10;                      onClick={() =&gt; setShowPassword(!showPassword)}&#10;                      className=&quot;absolute z-30 -translate-y-1/2 cursor-pointer right-4 top-1/2&quot;&#10;                    &gt;&#10;                      {showPassword ? (&#10;                        &lt;EyeIcon className=&quot;fill-gray-500 dark:fill-gray-400 size-5&quot; /&gt;&#10;                      ) : (&#10;                        &lt;EyeCloseIcon className=&quot;fill-gray-500 dark:fill-gray-400 size-5&quot; /&gt;&#10;                      )}&#10;                    &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                {/* &lt;!-- Button --&gt; */}&#10;                &lt;div&gt;&#10;                  &lt;button&#10;                    className=&quot;flex items-center justify-center w-full px-4 py-3 text-sm font-medium text-white transition rounded-lg bg-brand-500 shadow-theme-xs hover:bg-brand-600&quot;&#10;                    type=&quot;submit&quot;&#10;                    disabled={loading}&#10;                  &gt;&#10;                    {loading ? &quot;Signing Up...&quot; : &quot;Sign Up&quot;}&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;                {error &amp;&amp; &lt;div className=&quot;text-error-500 text-sm&quot;&gt;{error}&lt;/div&gt;}&#10;                {success &amp;&amp; &lt;div className=&quot;text-success-500 text-sm&quot;&gt;{success}&lt;/div&gt;}&#10;              &lt;/div&gt;&#10;            &lt;/form&gt;&#10;                Already have an account? {&quot;&quot;}&#10;            &lt;div className=&quot;mt-5&quot;&gt;&#10;              &lt;p className=&quot;text-sm font-normal text-center text-gray-700 dark:text-gray-400 sm:text-start&quot;&gt;&#10;                Already have an account? {&quot;&quot;}&#10;                &lt;Link&#10;                  to=&quot;/signin&quot;&#10;                  className=&quot;text-brand-500 hover:text-brand-600 dark:text-brand-400&quot;&#10;                &gt;&#10;                  Sign In&#10;                &lt;/Link&gt;&#10;              &lt;/p&gt;&#10;            &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import { useState } from &quot;react&quot;;&#10;import { Link } from &quot;react-router&quot;;&#10;import { useNavigate } from &quot;react-router-dom&quot;;&#10;import { EyeCloseIcon, EyeIcon } from &quot;../../icons&quot;;&#10;import Label from &quot;../form/Label&quot;;&#10;import Input from &quot;../form/input/InputField&quot;;&#10;import { signUp } from &quot;../../services/authService&quot;;&#10;&#10;export default function SignUpForm() {&#10;  const [showPassword, setShowPassword] = useState(false);&#10;  const [fname, setFname] = useState(&quot;&quot;);&#10;  const [lname, setLname] = useState(&quot;&quot;);&#10;  const [email, setEmail] = useState(&quot;&quot;);&#10;  const [password, setPassword] = useState(&quot;&quot;);&#10;  const [loading, setLoading] = useState(false);&#10;  const [error, setError] = useState&lt;string | null&gt;(null);&#10;  const [success, setSuccess] = useState&lt;string | null&gt;(null);&#10;  const navigate = useNavigate();&#10;&#10;  const handleSignUp = async (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setError(null);&#10;    setSuccess(null);&#10;    if (!fname || !lname || !email || !password) {&#10;      setError(&quot;All fields are required.&quot;);&#10;      return;&#10;    }&#10;&#10;    if (!email.toLowerCase().endsWith('@bookclub.com')) {&#10;      setError(&quot;unauthorized email.&quot;);&#10;      return;&#10;    }&#10;&#10;    setLoading(true);&#10;    try {&#10;      const name = `${fname} ${lname}`;&#10;      await signUp({ name, email, password });&#10;      setSuccess(&quot;Sign up successful! You can now sign in.&quot;);&#10;      setFname(&quot;&quot;);&#10;      setLname(&quot;&quot;);&#10;      setEmail(&quot;&quot;);&#10;      setPassword(&quot;&quot;);&#10;      setTimeout(() =&gt; navigate(&quot;/signin&quot;), 1000);&#10;    } catch (err: any) {&#10;      setError(err?.response?.data?.message || &quot;Sign up failed.&quot;);&#10;    } finally {&#10;      setLoading(false);&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;flex flex-col flex-1 w-full&quot;&gt;&#10;      &lt;div className=&quot;w-full&quot;&gt;&#10;        &lt;div className=&quot;mb-6 sm:mb-8&quot;&gt;&#10;          &lt;h1 className=&quot;mb-2 font-semibold text-gray-800 text-2xl sm:text-title-sm dark:text-white/90 lg:text-title-md&quot;&gt;&#10;            Sign Up&#10;          &lt;/h1&gt;&#10;          &lt;p className=&quot;text-sm sm:text-base text-gray-500 dark:text-gray-400&quot;&gt;&#10;            Enter your email and password to sign up!&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;div className=&quot;relative py-3 sm:py-4&quot;&gt;&#10;            &lt;div className=&quot;absolute inset-0 flex items-center&quot;&gt;&#10;              &lt;div className=&quot;w-full border-t border-gray-200 dark:border-gray-800&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;          &lt;form onSubmit={handleSignUp} className=&quot;space-y-5 sm:space-y-6&quot;&gt;&#10;            &lt;div className=&quot;space-y-5 sm:space-y-6&quot;&gt;&#10;              &lt;div className=&quot;grid grid-cols-1 gap-4 sm:gap-5 sm:grid-cols-2&quot;&gt;&#10;                {/* First Name */}&#10;                &lt;div className=&quot;sm:col-span-1&quot;&gt;&#10;                  &lt;Label&gt;&#10;                    First Name&lt;span className=&quot;text-error-500&quot;&gt;*&lt;/span&gt;&#10;                  &lt;/Label&gt;&#10;                  &lt;Input&#10;                    type=&quot;text&quot;&#10;                    id=&quot;fname&quot;&#10;                    name=&quot;fname&quot;&#10;                    placeholder=&quot;Enter your first name&quot;&#10;                    value={fname}&#10;                    onChange={e =&gt; setFname(e.target.value)}&#10;                    className=&quot;mt-1&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;                {/* Last Name */}&#10;                &lt;div className=&quot;sm:col-span-1&quot;&gt;&#10;                  &lt;Label&gt;&#10;                    Last Name&lt;span className=&quot;text-error-500&quot;&gt;*&lt;/span&gt;&#10;                  &lt;/Label&gt;&#10;                  &lt;Input&#10;                    type=&quot;text&quot;&#10;                    id=&quot;lname&quot;&#10;                    name=&quot;lname&quot;&#10;                    placeholder=&quot;Enter your last name&quot;&#10;                    value={lname}&#10;                    onChange={e =&gt; setLname(e.target.value)}&#10;                    className=&quot;mt-1&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              {/* Email */}&#10;              &lt;div&gt;&#10;                &lt;Label&gt;&#10;                  Email&lt;span className=&quot;text-error-500&quot;&gt;*&lt;/span&gt;&#10;                &lt;/Label&gt;&#10;                &lt;Input&#10;                  type=&quot;email&quot;&#10;                  id=&quot;email&quot;&#10;                  name=&quot;email&quot;&#10;                  placeholder=&quot;Enter your email&quot;&#10;                  value={email}&#10;                  onChange={e =&gt; setEmail(e.target.value)}&#10;                  className=&quot;mt-1&quot;&#10;                /&gt;&#10;              &lt;/div&gt;&#10;              {/* Password */}&#10;              &lt;div&gt;&#10;                &lt;Label&gt;&#10;                  Password&lt;span className=&quot;text-error-500&quot;&gt;*&lt;/span&gt;&#10;                &lt;/Label&gt;&#10;                &lt;div className=&quot;relative mt-1&quot;&gt;&#10;                  &lt;Input&#10;                    placeholder=&quot;Enter your password&quot;&#10;                    type={showPassword ? &quot;text&quot; : &quot;password&quot;}&#10;                    value={password}&#10;                    onChange={e =&gt; setPassword(e.target.value)}&#10;                  /&gt;&#10;                  &lt;button&#10;                    type=&quot;button&quot;&#10;                    onClick={() =&gt; setShowPassword(!showPassword)}&#10;                    className=&quot;absolute z-30 -translate-y-1/2 cursor-pointer right-3 sm:right-4 top-1/2 p-1 hover:bg-gray-100 dark:hover:bg-gray-800 rounded transition-colors&quot;&#10;                  &gt;&#10;                    {showPassword ? (&#10;                      &lt;EyeIcon className=&quot;fill-gray-500 dark:fill-gray-400 size-5&quot; /&gt;&#10;                    ) : (&#10;                      &lt;EyeCloseIcon className=&quot;fill-gray-500 dark:fill-gray-400 size-5&quot; /&gt;&#10;                    )}&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              {/* Button */}&#10;              &lt;div&gt;&#10;                &lt;button&#10;                  className=&quot;flex items-center justify-center w-full px-4 py-3 sm:py-2.5 text-sm font-medium text-white transition rounded-lg bg-brand-500 shadow-theme-xs hover:bg-brand-600 disabled:opacity-50 disabled:cursor-not-allowed touch-manipulation&quot;&#10;                  type=&quot;submit&quot;&#10;                  disabled={loading}&#10;                &gt;&#10;                  {loading ? &quot;Signing Up...&quot; : &quot;Sign Up&quot;}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;              {error &amp;&amp; &lt;div className=&quot;text-error-500 text-sm p-3 bg-red-50 dark:bg-red-900/20 rounded-lg border border-red-200 dark:border-red-800&quot;&gt;{error}&lt;/div&gt;}&#10;              {success &amp;&amp; &lt;div className=&quot;text-success-500 text-sm p-3 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800&quot;&gt;{success}&lt;/div&gt;}&#10;            &lt;/div&gt;&#10;          &lt;/form&gt;&#10;&#10;          &lt;div className=&quot;mt-6 sm:mt-5&quot;&gt;&#10;            &lt;p className=&quot;text-sm font-normal text-center text-gray-700 dark:text-gray-400 sm:text-start&quot;&gt;&#10;              Already have an account? {&quot; &quot;}&#10;              &lt;Link&#10;                to=&quot;/signin&quot;&#10;                className=&quot;text-brand-500 hover:text-brand-600 dark:text-brand-400 font-medium transition-colors&quot;&#10;              &gt;&#10;                Sign In&#10;              &lt;/Link&gt;&#10;            &lt;/p&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/components/homeStatistic/LibraryMetrics.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/components/homeStatistic/LibraryMetrics.tsx" />
              <option name="originalContent" value="import { useState, useEffect } from &quot;react&quot;;&#10;import { FontAwesomeIcon } from &quot;@fortawesome/react-fontawesome&quot;;&#10;import {&#10;  faBook,&#10;  faUsers,&#10;  faHandHolding,&#10;  faExchangeAlt&#10;} from &quot;@fortawesome/free-solid-svg-icons&quot;;&#10;import { dashboardService, LibraryMetrics as LibraryMetricsType } from &quot;../../services/dashboardService&quot;;&#10;&#10;export default function LibraryMetrics() {&#10;  const [metrics, setMetrics] = useState&lt;LibraryMetricsType&gt;({&#10;    totalBooks: 0,&#10;    totalReaders: 0,&#10;    activeBorrowings: 0,&#10;    totalBorrowings: 0&#10;  });&#10;  const [loading, setLoading] = useState(true);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchMetrics = async () =&gt; {&#10;      try {&#10;        const data = await dashboardService.getLibraryMetrics();&#10;        setMetrics(data);&#10;      } catch (error) {&#10;        console.error('Error fetching library metrics:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchMetrics();&#10;  }, []);&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;        {[1, 2, 3, 4].map((i) =&gt; (&#10;          &lt;div key={i} className=&quot;rounded-2xl border p-5 bg-white animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-4 bg-gray-200 rounded w-3/4 mb-2&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-1/2&quot;&gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;        ))}&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;      &lt;div className=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;        &lt;div className=&quot;rounded-2xl border p-5 bg-white hover:shadow-lg transition-shadow duration-300&quot;&gt;&#10;          &lt;div className=&quot;flex items-center&quot;&gt;&#10;            &lt;div className=&quot;p-3 rounded-full bg-blue-100&quot;&gt;&#10;              &lt;FontAwesomeIcon icon={faBook} className=&quot;text-blue-600 text-xl&quot; /&gt;&#10;            &lt;/div&gt;&#10;            &lt;h4 className=&quot;ml-3 text-lg font-semibold text-gray-700&quot;&gt;Total Books&lt;/h4&gt;&#10;          &lt;/div&gt;&#10;          &lt;p className=&quot;mt-3 text-3xl font-bold text-blue-600&quot;&gt;{metrics.totalBooks.toLocaleString()}&lt;/p&gt;&#10;          &lt;p className=&quot;text-sm text-gray-500 mt-1&quot;&gt;Books in collection&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;rounded-2xl border p-5 bg-white hover:shadow-lg transition-shadow duration-300&quot;&gt;&#10;          &lt;div className=&quot;flex items-center&quot;&gt;&#10;            &lt;div className=&quot;p-3 rounded-full bg-green-100&quot;&gt;&#10;              &lt;FontAwesomeIcon icon={faUsers} className=&quot;text-green-600 text-xl&quot; /&gt;&#10;            &lt;/div&gt;&#10;            &lt;h4 className=&quot;ml-3 text-lg font-semibold text-gray-700&quot;&gt;Total Readers&lt;/h4&gt;&#10;          &lt;/div&gt;&#10;          &lt;p className=&quot;mt-3 text-3xl font-bold text-green-600&quot;&gt;{metrics.totalReaders.toLocaleString()}&lt;/p&gt;&#10;          &lt;p className=&quot;text-sm text-gray-500 mt-1&quot;&gt;Registered members&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;rounded-2xl border p-5 bg-white hover:shadow-lg transition-shadow duration-300&quot;&gt;&#10;          &lt;div className=&quot;flex items-center&quot;&gt;&#10;            &lt;div className=&quot;p-3 rounded-full bg-orange-100&quot;&gt;&#10;              &lt;FontAwesomeIcon icon={faHandHolding} className=&quot;text-orange-600 text-xl&quot; /&gt;&#10;            &lt;/div&gt;&#10;            &lt;h4 className=&quot;ml-3 text-lg font-semibold text-gray-700&quot;&gt;Active Borrowings&lt;/h4&gt;&#10;          &lt;/div&gt;&#10;          &lt;p className=&quot;mt-3 text-3xl font-bold text-orange-600&quot;&gt;{metrics.activeBorrowings.toLocaleString()}&lt;/p&gt;&#10;          &lt;p className=&quot;text-sm text-gray-500 mt-1&quot;&gt;Currently borrowed&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;rounded-2xl border p-5 bg-white hover:shadow-lg transition-shadow duration-300&quot;&gt;&#10;          &lt;div className=&quot;flex items-center&quot;&gt;&#10;            &lt;div className=&quot;p-3 rounded-full bg-purple-100&quot;&gt;&#10;              &lt;FontAwesomeIcon icon={faExchangeAlt} className=&quot;text-purple-600 text-xl&quot; /&gt;&#10;            &lt;/div&gt;&#10;            &lt;h4 className=&quot;ml-3 text-lg font-semibold text-gray-700&quot;&gt;Total Borrowings&lt;/h4&gt;&#10;          &lt;/div&gt;&#10;          &lt;p className=&quot;mt-3 text-3xl font-bold text-purple-600&quot;&gt;{metrics.totalBorrowings.toLocaleString()}&lt;/p&gt;&#10;          &lt;p className=&quot;text-sm text-gray-500 mt-1&quot;&gt;All time transactions&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import { useState, useEffect } from &quot;react&quot;;&#10;import { FontAwesomeIcon } from &quot;@fortawesome/react-fontawesome&quot;;&#10;import {&#10;  faBook,&#10;  faUsers,&#10;  faHandHolding,&#10;  faExchangeAlt&#10;} from &quot;@fortawesome/free-solid-svg-icons&quot;;&#10;import { dashboardService, LibraryMetrics as LibraryMetricsType } from &quot;../../services/dashboardService&quot;;&#10;&#10;export default function LibraryMetrics() {&#10;  const [metrics, setMetrics] = useState&lt;LibraryMetricsType&gt;({&#10;    totalBooks: 0,&#10;    totalReaders: 0,&#10;    activeBorrowings: 0,&#10;    totalBorrowings: 0&#10;  });&#10;  const [loading, setLoading] = useState(true);&#10;&#10;  useEffect(() =&gt; {&#10;    const fetchMetrics = async () =&gt; {&#10;      try {&#10;        const data = await dashboardService.getLibraryMetrics();&#10;        setMetrics(data);&#10;      } catch (error) {&#10;        console.error('Error fetching library metrics:', error);&#10;      } finally {&#10;        setLoading(false);&#10;      }&#10;    };&#10;&#10;    fetchMetrics();&#10;  }, []);&#10;&#10;  if (loading) {&#10;    return (&#10;      &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4&quot;&gt;&#10;        {[1, 2, 3, 4].map((i) =&gt; (&#10;          &lt;div key={i} className=&quot;rounded-2xl border p-4 sm:p-5 bg-white animate-pulse&quot;&gt;&#10;            &lt;div className=&quot;h-4 bg-gray-200 rounded w-3/4 mb-2&quot;&gt;&lt;/div&gt;&#10;            &lt;div className=&quot;h-8 bg-gray-200 rounded w-1/2&quot;&gt;&lt;/div&gt;&#10;          &lt;/div&gt;&#10;        ))}&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;      &lt;div className=&quot;grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4&quot;&gt;&#10;        &lt;div className=&quot;rounded-2xl border p-4 sm:p-5 bg-white hover:shadow-lg transition-shadow duration-300&quot;&gt;&#10;          &lt;div className=&quot;flex items-center&quot;&gt;&#10;            &lt;div className=&quot;p-2 sm:p-3 rounded-full bg-blue-100 flex-shrink-0&quot;&gt;&#10;              &lt;FontAwesomeIcon icon={faBook} className=&quot;text-blue-600 text-lg sm:text-xl&quot; /&gt;&#10;            &lt;/div&gt;&#10;            &lt;h4 className=&quot;ml-2 sm:ml-3 text-sm sm:text-lg font-semibold text-gray-700 leading-tight&quot;&gt;Total Books&lt;/h4&gt;&#10;          &lt;/div&gt;&#10;          &lt;p className=&quot;mt-2 sm:mt-3 text-2xl sm:text-3xl font-bold text-blue-600&quot;&gt;{metrics.totalBooks.toLocaleString()}&lt;/p&gt;&#10;          &lt;p className=&quot;text-xs sm:text-sm text-gray-500 mt-1&quot;&gt;Books in collection&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;rounded-2xl border p-4 sm:p-5 bg-white hover:shadow-lg transition-shadow duration-300&quot;&gt;&#10;          &lt;div className=&quot;flex items-center&quot;&gt;&#10;            &lt;div className=&quot;p-2 sm:p-3 rounded-full bg-green-100 flex-shrink-0&quot;&gt;&#10;              &lt;FontAwesomeIcon icon={faUsers} className=&quot;text-green-600 text-lg sm:text-xl&quot; /&gt;&#10;            &lt;/div&gt;&#10;            &lt;h4 className=&quot;ml-2 sm:ml-3 text-sm sm:text-lg font-semibold text-gray-700 leading-tight&quot;&gt;Total Readers&lt;/h4&gt;&#10;          &lt;/div&gt;&#10;          &lt;p className=&quot;mt-2 sm:mt-3 text-2xl sm:text-3xl font-bold text-green-600&quot;&gt;{metrics.totalReaders.toLocaleString()}&lt;/p&gt;&#10;          &lt;p className=&quot;text-xs sm:text-sm text-gray-500 mt-1&quot;&gt;Registered members&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;rounded-2xl border p-4 sm:p-5 bg-white hover:shadow-lg transition-shadow duration-300&quot;&gt;&#10;          &lt;div className=&quot;flex items-center&quot;&gt;&#10;            &lt;div className=&quot;p-2 sm:p-3 rounded-full bg-orange-100 flex-shrink-0&quot;&gt;&#10;              &lt;FontAwesomeIcon icon={faHandHolding} className=&quot;text-orange-600 text-lg sm:text-xl&quot; /&gt;&#10;            &lt;/div&gt;&#10;            &lt;h4 className=&quot;ml-2 sm:ml-3 text-sm sm:text-lg font-semibold text-gray-700 leading-tight&quot;&gt;Active Borrowings&lt;/h4&gt;&#10;          &lt;/div&gt;&#10;          &lt;p className=&quot;mt-2 sm:mt-3 text-2xl sm:text-3xl font-bold text-orange-600&quot;&gt;{metrics.activeBorrowings.toLocaleString()}&lt;/p&gt;&#10;          &lt;p className=&quot;text-xs sm:text-sm text-gray-500 mt-1&quot;&gt;Currently borrowed&lt;/p&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;rounded-2xl border p-4 sm:p-5 bg-white hover:shadow-lg transition-shadow duration-300&quot;&gt;&#10;          &lt;div className=&quot;flex items-center&quot;&gt;&#10;            &lt;div className=&quot;p-2 sm:p-3 rounded-full bg-purple-100 flex-shrink-0&quot;&gt;&#10;              &lt;FontAwesomeIcon icon={faExchangeAlt} className=&quot;text-purple-600 text-lg sm:text-xl&quot; /&gt;&#10;            &lt;/div&gt;&#10;            &lt;h4 className=&quot;ml-2 sm:ml-3 text-sm sm:text-lg font-semibold text-gray-700 leading-tight&quot;&gt;Total Borrowings&lt;/h4&gt;&#10;          &lt;/div&gt;&#10;          &lt;p className=&quot;mt-2 sm:mt-3 text-2xl sm:text-3xl font-bold text-purple-600&quot;&gt;{metrics.totalBorrowings.toLocaleString()}&lt;/p&gt;&#10;          &lt;p className=&quot;text-xs sm:text-sm text-gray-500 mt-1&quot;&gt;All time transactions&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/services/firebase.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/services/firebase.ts" />
              <option name="originalContent" value="import { initializeApp } from &quot;firebase/app&quot;;&#10;import { getStorage } from &quot;firebase/storage&quot;;&#10;&#10;const firebaseConfig = {&#10;  apiKey: &quot;AIzaSyA_DX6klUwoZp6UF4wclU3VPjPQOALJnJg&quot;,&#10;  authDomain: &quot;printerest-clone-773aa.firebaseapp.com&quot;,&#10;  projectId: &quot;printerest-clone-773aa&quot;,&#10;  storageBucket: &quot;printerest-clone-773aa.appspot.com&quot;,&#10;  messagingSenderId: &quot;16581331396&quot;,&#10;  appId: &quot;1:16581331396:web:d44f9b1ecc47caca343c91&quot;,&#10;  measurementId: &quot;G-7DYF2BSN3C&quot;&#10;};&#10;&#10;const app = initializeApp(firebaseConfig);&#10;export const storage = getStorage(app);&#10;&#10;" />
              <option name="updatedContent" value="import { initializeApp } from &quot;firebase/app&quot;;&#10;import { getStorage } from &quot;firebase/storage&quot;;&#10;&#10;const firebaseConfig = {&#10;  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,&#10;  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,&#10;  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,&#10;  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,&#10;  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,&#10;  appId: import.meta.env.VITE_FIREBASE_APP_ID,&#10;  measurementId: import.meta.env.VITE_FIREBASE_MEASUREMENT_ID&#10;};&#10;&#10;const app = initializeApp(firebaseConfig);&#10;export const storage = getStorage(app);" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>